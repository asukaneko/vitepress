import { defineComponent as b, ref as n, onMounted as k, onUnmounted as _, createBlock as C, openBlock as u, Teleport as M, withDirectives as T, createElementVNode as v, normalizeStyle as x, normalizeClass as y, createElementBlock as g, toDisplayString as S, unref as B, vShow as E, createVNode as L, render as q } from "vue";
const H = {
  class: "progress-ring",
  viewBox: "0 0 36 36"
}, z = ["stroke-dasharray"], D = {
  key: 0,
  class: "progress-text"
}, V = ["innerHTML"], A = "M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831", F = `
<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
	<g fill="none" fill-rule="evenodd">
		<path d="M24 0v24H0V0zM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035q-.016-.005-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427q-.004-.016-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093q.019.005.029-.008l.004-.014l-.034-.614q-.005-.019-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014l-.034.614q.001.018.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z" />
		<path fill="currentColor" d="M11.293 8.293a1 1 0 0 1 1.414 0l5.657 5.657a1 1 0 0 1-1.414 1.414L12 10.414l-4.95 4.95a1 1 0 0 1-1.414-1.414z" />
	</g>
</svg>`, N = /* @__PURE__ */ b({
  __name: "BackToTopButton",
  props: {
    progressColor: {},
    textColor: {},
    arrowSvg: {}
  },
  setup(r) {
    const o = r, e = n(!1), t = n(!1), a = n(!1), s = n(0);
    let c = null;
    const d = n(!1), m = () => {
      e.value = document.documentElement.classList.contains("dark");
    }, f = () => {
      d.value || (requestAnimationFrame(() => {
        const l = window.scrollY || document.documentElement.scrollTop, i = document.documentElement.scrollHeight - window.innerHeight;
        let p = l / i * 100;
        p >= 99.5 && (p = 100), s.value = Math.min(100, Math.max(0, p)), a.value = l > 100, d.value = !1;
      }), d.value = !0);
    }, w = () => {
      window.scrollTo({ top: 0, behavior: "smooth" });
    };
    k(() => {
      t.value = !0, m(), f(), new MutationObserver(m).observe(document.documentElement, {
        attributes: !0,
        attributeFilter: ["class"]
      }), c = () => f(), window.addEventListener("scroll", c);
    }), _(() => {
      c && window.removeEventListener("scroll", c);
    });
    const h = o.arrowSvg || F;
    return (l, i) => (u(), C(M, { to: "body" }, [
      T(v("button", {
        class: y(["back-to-top-button", { visible: a.value }]),
        onClick: w,
        style: x({
          "--progress": s.value + "%",
          "--progress-color": l.progressColor,
          "--button-bg": e.value ? "#1e1e1e" : "#fff",
          "--text-color": l.textColor || (e.value ? "#fff" : "#000")
        })
      }, [
        (u(), g("svg", H, [
          i[0] || (i[0] = v("path", {
            class: "progress-bg",
            d: "M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
          }, null, -1)),
          v("path", {
            class: "progress-bar",
            d: A,
            "stroke-dasharray": `${s.value}, 100`
          }, null, 8, z)
        ])),
        s.value < 100 ? (u(), g("span", D, S(Math.floor(s.value)) + "% ", 1)) : (u(), g("span", {
          key: 1,
          class: "progress-icon",
          innerHTML: B(h)
        }, null, 8, V))
      ], 6), [
        [E, t.value]
      ])
    ]));
  }
}), O = (r, o) => {
  const e = r.__vccOpts || r;
  for (const [t, a] of o)
    e[t] = a;
  return e;
}, P = /* @__PURE__ */ O(N, [["__scopeId", "data-v-a9131788"]]);
function U(r, o = {}) {
  if (typeof window > "u") return;
  const e = document.createElement("div");
  e.id = "back-to-top-container", document.body.appendChild(e);
  const t = L(P, {
    progressColor: o.progressColor || "#42b983",
    textColor: o.textColor,
    arrowSvg: o.arrowSvg
  });
  q(t, e);
}
export {
  U as default
};
